package com.tyss.myfirstwebapp.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;

import com.tyss.myfirstwebapp.beans.UserBean;

public class UserDaoImpl implements UserDao {
	EntityManagerFactory emf = Persistence.createEntityManagerFactory("TestPersistence");
	EntityManager em = emf.createEntityManager();
	EntityTransaction tx = null;

	@Override
	public UserBean searchUser(int userId) {
		UserBean ubean = em.find(UserBean.class, userId);
		return ubean;
	}

	@Override
	public UserBean authenticate(int userId, String password) {

		String jpql = "from UserBean where userid=:uid and password=:pass";
		Query query = em.createQuery(jpql);
		query.setParameter("uid", userId);
		query.setParameter("pass", password);
		UserBean bean = null;
		try {
			bean = (UserBean) query.getSingleResult();
		} catch (Exception e) {
			e.printStackTrace();
		}

		return bean;
	}

	@Override
	public boolean addUser(UserBean user) {
		boolean isAdded = false;
		try {
			tx = em.getTransaction();
			tx.begin();
			em.persist(user);
			tx.commit();
			isAdded = true;
		} catch (Exception e) {
			e.printStackTrace();
		}
		em.close();
		return isAdded;
	}

	@Override
	public boolean deleteUser(int userId) {
		boolean b = false;
		tx = em.getTransaction();
		tx.begin();
		UserBean ubean = em.find(UserBean.class, userId);
		if (ubean != null) {
			em.remove(ubean);
			tx.commit();
			b = true;
		}
		em.close();
		return b;
	}

	@Override
	public boolean updateUser(UserBean user) {
		boolean b = false;
		tx = em.getTransaction();
		tx.begin();
		UserBean ubean = em.find(UserBean.class, user.getUserid());
		if (ubean != null) {
			em.remove(ubean);
			tx.commit();
			b = true;
		}
		em.close();
		return b;
	}

	@Override
	public List<UserBean> getAllUsers() {
		String jpql = "from UserBean";
		Query query = em.createQuery(jpql);
		List<UserBean> list = query.getResultList();
		em.close();
		return list;
	}
}
